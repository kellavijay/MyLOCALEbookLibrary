// <auto-generated />
using EbookInfraData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EbookInfraData.Migrations
{
    [DbContext(typeof(ebooklibraryDBcontext))]
    partial class ebooklibraryDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EbookDomain.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookName");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<int>("TechnologyId");

                    b.HasKey("BookId");

                    b.HasIndex("TechnologyId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("EbookDomain.Models.Technology", b =>
                {
                    b.Property<int>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TechnologyDomain");

                    b.Property<string>("TechnologyName");

                    b.HasKey("TechnologyId");

                    b.ToTable("Technology");
                });

            modelBuilder.Entity("EbookDomain.Models.Book", b =>
                {
                    b.HasOne("EbookDomain.Models.Technology", "technology")
                        .WithMany("Books")
                        .HasForeignKey("TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
